{"ast":null,"code":"export const BASE_URL = 'http://localhost:4000';\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n}\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(checkResponse);\n};\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(checkResponse);\n};\nexport const checkToken = () => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  }).then(checkResponse).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","credentials","body","JSON","stringify","then","login","checkToken","data"],"sources":["C:/Users/yanik/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'http://localhost:4000';\n\nfunction checkResponse(res) {\n    if (res.ok) {\n        return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n}\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n            password: password,\n            email: email\n        })\n    }).then(checkResponse);\n};\n\nexport const login = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n            password: password,\n            email: email\n        })\n    }).then(checkResponse);\n};\n\nexport const checkToken = () => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n    })\n        .then(checkResponse)\n        .then(data => data);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAuB;AAE/C,SAASC,aAAaA,CAACC,GAAG,EAAE;EACxB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACrB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;AACjD;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,QAAQ,EAAEA,QAAQ;MAClBD,KAAK,EAAEA;IACX,CAAC;EACL,CAAC,CAAC,CAACS,IAAI,CAACjB,aAAa,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMkB,KAAK,GAAGA,CAACV,KAAK,EAAEC,QAAQ,KAAK;EACtC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,QAAQ,EAAEA,QAAQ;MAClBD,KAAK,EAAEA;IACX,CAAC;EACL,CAAC,CAAC,CAACS,IAAI,CAACjB,aAAa,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMmB,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACjCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,WAAW,EAAE;EACjB,CAAC,CAAC,CACGI,IAAI,CAACjB,aAAa,CAAC,CACnBiB,IAAI,CAACG,IAAI,IAAIA,IAAI,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}